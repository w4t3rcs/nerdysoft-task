services:
  postgres:
    image: 'postgres:15'
    container_name: nerdysoft-postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
    ports:
      - '5432:5432'
    networks:
      - backend
  redis:
    image: 'redis:7.4.2'
    container_name: nerdysoft-redis
    command: redis-server --save 20 1 --loglevel warning
    ports:
      - '6379:6379'
    volumes:
      - cache:/data
    networks:
      - backend
  app:
    container_name: nerdysoft-task-app
    build:
      context: .
    depends_on:
      - postgres
      - redis
    environment:
      SPRING_DATASOURCE_URL: ${POSTGRES_URL}/${POSTGRES_DB}
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_USER}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD}
      SPRING_DATA_REDIS_URL: ${REDIS_URL}
    ports:
      - '8080:8080'
    networks:
      - backend

volumes:
  cache:
    driver: local
networks:
  backend:
    driver: bridge